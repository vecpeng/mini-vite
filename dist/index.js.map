{"version":3,"sources":["../src/node/cli.ts","../src/server/index.ts","../src/optimizer/index.ts","../src/constants.ts","../src/optimizer/scanPlguin.ts","../src/optimizer/prebundlePlugin.ts"],"sourcesContent":["import cac from 'cac';\nimport {startDevServer} from \"../server\";\nconst cli = cac();\n\ncli\n    .command(\"[root]\", \"Run the development server\")\n    .alias(\"serve\")\n    .alias(\"dev\")\n    .action(async () => {\n        await startDevServer();\n    });\n\ncli.help();\n\ncli.parse();","import connect from 'connect';\n\nimport { blue, green } from 'picocolors';\n\nimport {optimize} from \"../optimizer\";\n\nexport async function startDevServer() {\n    const app = connect();\n    const root = process.cwd();\n    const startTime = Date.now();\n    app.listen(3000, async () => {\n        // ‰æùËµñÈ¢ÑÊûÑÂª∫\n        await optimize(root);\n        console.log(\n            green(\"üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!\"),\n            `ËÄóÊó∂: ${Date.now() - startTime}ms`\n        );\n        console.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑ: ${blue(\"http://localhost:3000\")}`);\n    })\n}","import path from 'path';\nimport { build } from \"esbuild\";\nimport { scanPlugin } from \"./scanPlguin\";\nimport {green} from \"picocolors\";\nimport { preBundlePlugin } from './prebundlePlugin'\nimport {PRE_BUNDLE_DIR} from \"../constants\";\n\nexport async function optimize(root: string) {\n    // 1. Á°ÆÂÆöÂÖ•Âè£\n    const entry = path.resolve(root, \"src/main.tsx\");\n\n    // 2. ‰ªéÂÖ•Âè£Â§ÑÊâ´Êèè‰æùËµñ\n    const deps = new Set<string>();\n    await build({\n        entryPoints: [entry],\n        bundle: true,\n        write: false,\n        plugins: [scanPlugin((deps))],\n    });\n\n    console.log(\n        `${green(\"ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ\")}:\\n${[...deps]\n            .map(green)\n            .map((item) => `  ${item}`)\n            .join(\"\\n\")}`\n    );\n\n    await build({\n        entryPoints: [...deps],\n        write: true,\n        bundle: true,\n        format: \"esm\",\n        splitting: true,\n        outdir: path.resolve(root, PRE_BUNDLE_DIR),\n        plugins: [preBundlePlugin(deps)],\n    });\n}","import path from 'path';\n\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".m-vite\");\nexport const EXTERNAL_TYPES = [\n    \"css\",\n    \"less\",\n    \"sass\",\n    \"scss\",\n    \"styl\",\n    \"stylus\",\n    \"pcss\",\n    \"postcss\",\n    \"vue\",\n    \"svelte\",\n    \"marko\",\n    \"astro\",\n    \"png\",\n    \"jpe?g\",\n    \"gif\",\n    \"svg\",\n    \"ico\",\n    \"webp\",\n    \"avif\",\n];\n\nexport const BARE_IMPORT_RE = /^[\\w@][^:]/;","import { Plugin } from 'esbuild';\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from '../constants';\n\nexport function scanPlugin(deps: Set<string>): Plugin {\n    return {\n        name: \"esbuild:scan-deps\",\n        setup(build) {\n            // ÂøΩÁï•ÁöÑÊñá‰ª∂Á±ªÂûã\n            build.onResolve(\n                {\n                    filter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join(\"|\")})$`)\n                },\n                (resolveInfo) => {\n                    const { path: id } = resolveInfo\n                    return {\n                        path: id,\n                        external: true,\n                    }\n                }\n            );\n            // ËÆ∞ÂΩï‰æùËµñ\n            build.onResolve(\n                {\n                    filter: BARE_IMPORT_RE,\n                },\n                (resolveInfo) => {\n                    const { path: id } = resolveInfo;\n                    deps.add(id);\n                    return {\n                        path: id,\n                        external: true,\n                    }\n                }\n            )\n        }\n    }\n}","import { Loader, Plugin } from 'esbuild';\nimport { BARE_IMPORT_RE } from \"../constants\";\nimport { init, parse } from 'es-module-lexer';\nimport path from 'path';\nimport resolve from \"resolve\";\nimport fs from 'fs-extra';\nimport createDebug from 'debug';\n\nconst debug = createDebug('dev');\n\nexport function preBundlePlugin(deps: Set<string>): Plugin {\n    return {\n        name: \"esbuild:pre-pre-bundle\",\n        setup(build) {\n            build.onResolve(\n                    {\n                        filter: BARE_IMPORT_RE,\n                    },\n                    (resolveInfo) => {\n                        const {path: id, importer} = resolveInfo;\n                        const isEntry = !importer;\n                        if (deps.has(id)) {\n                            return isEntry\n                                ? {\n                                    path: id,\n                                    namespace: \"dep\",\n                                }\n                                : {\n                                    path: resolve.sync(id, {basedir: process.cwd()}),\n                                }\n                        }\n                    }\n            );\n\n            build.onLoad(\n                {\n                    filter: /.*/,\n                    namespace: \"dep\",\n                },\n                async (loadInfo) => {\n                    await init;\n                    const id = loadInfo.path;\n                    const root = process.cwd();\n                    const entryPath = resolve.sync(id, { basedir: root });\n                    const code = await fs.readFile(entryPath, \"utf-8\");\n                    const [imports, exports] = parse(code);\n                    let proxyModule = [];\n                    // commonjs Â§ÑÁêÜ\n                    if (!imports.length && !exports.length) {\n                        const res = require(entryPath);\n                        const specifiers = Object.keys(res);\n                        proxyModule.push(\n                            `export { ${specifiers.join(\",\")} } from \"${entryPath}\"`,\n                            `export default require(\"${entryPath}\")`\n                        )\n                    } else {\n                        //„ÄÄesmÂ§ÑÁêÜ\n                        if (exports.includes(\"default\")) {\n                            proxyModule.push(`import d from \"${entryPath}\"; export default d`);\n                        }\n                        proxyModule.push(`export * from \"${entryPath}\"`);\n                    }\n                    debug(\"‰ª£ÁêÜÊ®°ÂºèÂÜÖÂÆπ: %o\", proxyModule.join('\\n'));\n                    const loader = path.extname(entryPath).slice(1);\n                    return {\n                        loader: loader as Loader,\n                        contents: proxyModule.join(\"\\n\"),\n                        resolveDir: root,\n                    }\n                }\n            )\n        }\n    }\n}"],"mappings":"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","names":[]}